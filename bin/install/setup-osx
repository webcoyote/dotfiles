#!/usr/bin/env bash
set -euo pipefail
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if [[ $OSTYPE != 'darwin'* ]]; then
    echo >&2 "ERROR: this script is for Mac OSX"
    exit 1
fi

# Mac annoyances
#
# - window management isn't as keyboard friendly as Windows. Solution: Rectangle.app
# - alt-tab only shows apps, not windows. Solution: Alt-Tab.app
# - BSD terminal apps are years out of date. Solution: brew install coreutils
# - terminal application is bad. Solution: Iterm.app
# - hard to tell which window is active: HammerSpoon.app + custom config (but still kinda suxor)

##############
# Annoyances
##############
# Disable the sound effects on boot
#sudo nvram SystemAudioVolume=" "

##############
# Create SSH key
##############
if [[ ! -f "$HOME/.ssh/id_ed25519" ]]; then
    ssh-keygen -t ed25519 -a 100 </dev/null
fi

##############
# Keyboard
##############
# Set fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 10

# enable keyboard navigation to move focus between controls (tab / shift-tab
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

# default behavior when holding down a key is to bring up a menu of characters with different diacritical marks.
# Try holding down ‘e’ to see this in action. If you want to instead repeat characters when a key is held:
defaults write -g ApplePressAndHoldEnabled -bool false

##############
# Finder
##############
# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Allow quitting Finder
defaults write com.apple.finder QuitMenuItem -bool true

##############
# Misc
##############
# Hide the dock
defaults write com.apple.dock autohide -bool true && killall Dock

# Disable crash reporting
defaults write com.apple.CrashReporter DialogType none

##############
# Install brew
##############
if ! command -v brew &> /dev/null ; then
    /usr/bin/env bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
    brew update && brew upgrade
fi

##############
# Install applications
##############
Applications=(
    1password                   # password management
    alt-tab                     # use Option-Tab as a better Alt-Tab
    atuin                       # better shell history
    bash                        # replace OSX bash 3.2 with something modern
    bat                         # better cat
    coreutils                   # replace old BSD command-line tools with GNU
    direnv                      # per-directory environment
    eza                         # better ls
    fd                          # better than unix `find`
    findutils                   # includes gxargs with the '-r' option
    firefox                     # low market-share browser
    fzf                         # fuzzy file-finder
    gh                          # github command-line
    git                         # yeah, it's the best
    git-delta                   # better pager for git diff
    git-lfs                     # big files
    gnupg                       # PGP / GPG encryption
    google-chrome               # spyware-riddled web browser
    grex                        # generate regex from user-provided test cases
    hammerspoon                 # OS automation
    iina                        # media player
    iterm2                      # terminal
    jless                       # JSON viewer
    jq                          # mangle JSON from the command line
    jql                         # JSON query language
    lulu                        # software firewall
    mas                         # Apple Store command line
    microsoft-office            # word/excel
    microsoft-remote-desktop    # visit my old PC
    netcat                      # play with sockets
    python                      #
    rectangle                   # hotkeys to position windows
    ripsecrets                  # avoid committing secrets to git
    rm-improved                 # move files to trash instead of deleting
    rg                          # better grep
    sd                          # better sed
    sk                          # fuzzy interactive file finder
    starship                    # console prompt
    steam                       # games
    sublime-text                # better text editor
    tealdeer                    # better tldr
    tokei                       # count lines within files
    tig                         # graphical git commit viewer
    tree                        # show directory tree in terminal
    visual-studio-code          # development environment
    wget                        # curl with different defaults
)
CaskApps=(
    discord                     # chat for play
    slack                       # chat for work
    zoom                        # chat for work
)
brew install "${Applications[@]}"
brew install --cask "${CaskApps[@]}"

# Rust can be installed via brew, but Wasm targets do not work, so use rustup
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

##############
# Configuration
##############
if [[ $OSTYPE == 'darwin'* ]]; then
    # Sublime text
    ln -sf "$HOME/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings"     "$HOME/Library/Application Support/Sublime Text/Packages/User/Preferences.sublime-settings"
    ln -sf "$HOME/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings" "$HOME/Library/Application Support/Sublime Text/Packages/User/Package Control.sublime-settings"
fi

##############
# Keyboard
##############

# Disable F11 for Mission Control "Show Desktop"
# - still manually requires turning off F11 in the keyboard shortcuts app
# https://www.isi.edu/~calvin/mac-missioncontrolshortcuts.htm
defaults write com.apple.symbolichotkeys.plist AppleSymbolicHotKeys -dict-add 36 "
  <dict>
    <key>enabled</key><false/>
    <key>value</key><dict>
      <key>type</key><string>standard</string>
      <key>parameters</key>
      <array>
        <integer>65535</integer>
        <integer>65535</integer>
        <integer>0</integer>
      </array>
    </dict>
  </dict>
"
defaults write com.apple.symbolichotkeys.plist AppleSymbolicHotKeys -dict-add 37 "
  <dict>
    <key>enabled</key><false/>
    <key>value</key><dict>
      <key>type</key><string>standard</string>
      <key>parameters</key>
      <array>
        <integer>65535</integer>
        <integer>65535</integer>
        <integer>0</integer>
      </array>
    </dict>
  </dict>
    "

##############
# App Shortcuts
##############

# Override keyboard shortcuts for Araxis Merge so it behaves like WinMerge
defaults write "com.araxis.merge" "NSUserKeyEquivalents" -dict  \
    "Next Change" "@~\\U2193"                                   \
    "Previous Change" "@~\\U2191"                               \
    "Push to Left and Replace" "@~\\U2190"                      \
    "Push to Right and Replace" "@~\\U2192"

# Override keyboard shortcuts for Beyond Compare it behaves like WinMerge
defaults write "com.ScooterSoftware.BeyondCompare" "NSUserKeyEquivalents" -dict \
    "Next Difference Section" "@~\\U2193"                                       \
    "Previous Difference Section" "@~\\U2191"                                   \
    "Copy to Left" "@~\\U2190"                                                  \
    "Copy to Right" "@~\\U2192"

##############
# Disk
##############
# Avoid SSD wear by configuring noatime at startup
# https://dpron.com/os-x-noatime-multiple-ssds/
if ! mount | rg "/System/Volumes/VM" | rg noatime &>/dev/null ; then
    if sudo --prompt "Enter password to configure 'noatime' for disk" true ; then
        FILE="com.noatime.plist"
        DSTFILE="/Library/LaunchDaemons/$FILE"
        sudo cp -f "$SCRIPT_DIR/$FILE" "$DSTFILE"
        sudo chown root:wheel "$DSTFILE"
        sudo chmod 644 "$DSTFILE"
    else
        echo "Skipping noatime configuration"
    fi
fi
