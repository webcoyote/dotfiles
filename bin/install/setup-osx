#!/usr/bin/env bash
set -Eeuo pipefail
trap 'echo "${BASH_SOURCE[0]}: line $LINENO: $BASH_COMMAND: exitcode $?"' ERR
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if [[ $OSTYPE != 'darwin'* ]]; then
    echo >&2 "ERROR: this script is for Mac OSX"
    exit 1
fi

# Mac annoyances
#
# - window management isn't as keyboard friendly as Windows. Solution: Rectangle.app
# - alt-tab only shows apps, not windows. Solution: Alt-Tab.app
# - BSD terminal apps are years out of date. Solution: brew install coreutils
# - terminal application is bad. Solution: Iterm.app
# - hard to tell which window is active: HammerSpoon.app + custom config (but still kinda suxor)


##############
# Annoyances
##############
# Disable the sound effects on boot
#sudo nvram SystemAudioVolume=" "


##############
# Create SSH key
##############
if [[ ! -f "$HOME/.ssh/id_ed25519" ]]; then
    ssh-keygen -t ed25519 -a 100 </dev/null
fi


##############
# All Applications
##############
# Expand save dialog by default
defaults write -g NSNavPanelExpandedStateForSaveMode -bool true

# Save to disk (not to iCloud) by default
defaults write -g NSDocumentSaveNewDocumentsToCloud -bool false


##############
# Keyboard
##############
# Set fast keyboard repeat rate
defaults write -g KeyRepeat -int 2
defaults write -g InitialKeyRepeat -int 12

# enable keyboard navigation to move focus between controls (tab / shift-tab)
defaults write -g AppleKeyboardUIMode -int 3

# default behavior when holding down a key is to bring up a menu of characters with different diacritical marks.
# Try holding down ‘e’ to see this in action. If you want to instead repeat characters when a key is held:
defaults write -g ApplePressAndHoldEnabled -bool false

# disable Cmd-M as minimize window by assigning it to "Center"
defaults write -g NSUserKeyEquivalents -dict-add "Center" "@m"

# Set Cmd-Escape for "menu walk" AKA "Move focus to the menu bar"
# For hotkey ID 7, enable it as a standard shortcut with no ASCII value, using
# physical key 53 (Escape) with modifier 1048576 (Command)"
# Claude says: "And that's why everyone hates this system!"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 7 "
  <dict>
    <key>enabled</key><true/>
    <key>value</key><dict>
      <key>type</key><string>standard</string>
      <key>parameters</key>
      <array>
        <integer>65535</integer>
        <integer>53</integer>
        <integer>1048576</integer>
      </array>
    </dict>
  </dict>
"

# Disable F11 for Mission Control "Show Desktop"
# - still manually requires turning off F11 in the keyboard shortcuts app
# https://www.isi.edu/~calvin/mac-missioncontrolshortcuts.htm
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 36 "
  <dict>
    <key>enabled</key><false/>
    <key>value</key><dict>
      <key>type</key><string>standard</string>
      <key>parameters</key>
      <array>
        <integer>65535</integer>
        <integer>65535</integer>
        <integer>0</integer>
      </array>
    </dict>
  </dict>
"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 37 "
  <dict>
    <key>enabled</key><false/>
    <key>value</key><dict>
      <key>type</key><string>standard</string>
      <key>parameters</key>
      <array>
        <integer>65535</integer>
        <integer>65535</integer>
        <integer>0</integer>
      </array>
    </dict>
  </dict>
"

# Override keyboard shortcuts for Araxis Merge so it behaves like WinMerge
#    "Next Change"                      Opt-Cmd-Down
#    "Previous Change                   Opt-Cmd-Up
#    "Push to Left and Replace"         Opt-Cmd-Left
#    "Push to Right and Replace"        Opt-Cmd-Right
defaults write "com.araxis.merge" "NSUserKeyEquivalents" -dict  \
    "Next Change" "@~\\U2193"                                   \
    "Previous Change" "@~\\U2191"                               \
    "Push to Left and Replace" "@~\\U2190"                      \
    "Push to Right and Replace" "@~\\U2192"

# Override keyboard shortcuts for Beyond Compare it behaves like WinMerge
#    "Next Difference Section"          Opt-Cmd-Down
#    "Previous Difference Section"      Opt-Cmd-Up
#    "Copy to Left" "@~\\U2190"         Opt-Cmd-Left
#    "Copy to Right" "@~\\U2192         Opt-Cmd-Right
defaults write "com.ScooterSoftware.BeyondCompare" "NSUserKeyEquivalents" -dict \
    "Next Difference Section" "@~\\U2193"                                       \
    "Previous Difference Section" "@~\\U2191"                                   \
    "Copy to Left" "@~\\U2190"                                                  \
    "Copy to Right" "@~\\U2192"


##############
# Finder
##############
# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Allow quitting Finder
defaults write com.apple.finder QuitMenuItem -bool true

# Set new window location to $HOME directory
defaults write com.apple.finder NewWindowTarget -string "PfHm"

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

##############
# Misc
##############
# Hide the dock
defaults write com.apple.dock autohide -bool true && killall Dock

# Disable crash reporting
defaults write com.apple.CrashReporter DialogType none

##############
# Install brew
##############
if ! command -v brew &> /dev/null ; then
    /usr/bin/env bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
    brew update --quiet && brew upgrade --quiet
fi

##############
# Install applications
##############
BrewApps=()
BrewApps+=(atuin)               # better shell history
BrewApps+=(bash)                # replace OSX bash 3.2 with something modern
BrewApps+=(bat)                 # better cat
BrewApps+=(blueutil)            # bluetooth from the command line
BrewApps+=(bottom)              # CPU graph (replaces top)
BrewApps+=(coreutils)           # replace old BSD command-line tools with GNU
BrewApps+=(direnv)              # per-directory environment
BrewApps+=(eza)                 # better ls
BrewApps+=(fd)                  # better than unix `find`
BrewApps+=(findutils)           # includes gxargs with the '-r' option
BrewApps+=(fzf)                 # fuzzy file-finder
BrewApps+=(gh)                  # github command-line
BrewApps+=(git)                 # yeah, it's the best
BrewApps+=(git-delta)           # better pager for git diff
BrewApps+=(git-lfs)             # big files
BrewApps+=(gnu-getopt)          # because OSX getopt is ancient
BrewApps+=(gnupg)               # PGP / GPG encryption
BrewApps+=(grex)                # generate regex from user-provided test cases
BrewApps+=(gron)                # make JSON greppable
BrewApps+=(imagemagick)         # image file manipulation
BrewApps+=(jless)               # JSON viewer
BrewApps+=(jq)                  # mangle JSON from the command line
BrewApps+=(jql)                 # JSON query language
BrewApps+=(mas)                 # Apple Store command line
BrewApps+=(moreutils)           # ifne/chronic/ts/sponge/vipe/pee
BrewApps+=(netcat)              # play with sockets
BrewApps+=(node)                # NodeJS
BrewApps+=(pnpm)                # NodeJS package manager (faster than npm)
BrewApps+=(procs)               # process list (replaces ps)
BrewApps+=(python)              # Python language
BrewApps+=(rg)                  # better grep
BrewApps+=(ripsecrets)          # avoid committing secrets to git
BrewApps+=(sd)                  # better sed
BrewApps+=(shellcheck)          # lint for bash
BrewApps+=(sk)                  # fuzzy interactive file finder
BrewApps+=(starship)            # console prompt
BrewApps+=(tealdeer)            # better tldr
BrewApps+=(tokei)               # count lines within files
BrewApps+=(tig)                 # graphical git commit viewer
BrewApps+=(tmux)                # terminal multiplexer
BrewApps+=(uv)                  # python package manager
BrewApps+=(wakeonlan)           # wakeup other computers
BrewApps+=(wget)                # curl with different defaults
BrewApps+=(xh)                  # curl/wget replacement
BrewApps+=(yt-dlp)              # YouTube downloader
BrewApps+=(zoxide)              # directory jumper (replaces z.sh)
brew install --quiet "${BrewApps[@]}"

CaskApps=()
CaskApps+=(1password)           # password management
CaskApps+=(alt-tab)             # use Option-Tab as a better Alt-Tab
CaskApps+=(discord)             # chat for play
CaskApps+=(dotnet-sdk)          # C# language
CaskApps+=(firefox)             # low market-share browser
CaskApps+=(ghostty)             # terminal by Mitchell Hashimoto that rocks
CaskApps+=(google-chrome)       # spyware-riddled web browser
CaskApps+=(hammerspoon)         # OS automation
CaskApps+=(iina)                # media player
CaskApps+=(iterm2)              # terminal
CaskApps+=(lulu)                # software firewall
CaskApps+=(menuwhere)           # keyboard access to menu-walking like in Windows
CaskApps+=(microsoft-office)    # word/excel
CaskApps+=(netnewswire)         # feed reader
CaskApps+=(rectangle)           # hotkeys to position windows
CaskApps+=(scroll-reverser)     # reverse mouse wheel scrolling
CaskApps+=(slack)               # chat for work
CaskApps+=(steam)               # games
CaskApps+=(sublime-text)        # better text editor
CaskApps+=(swift-quit)          # quit apps with no documents
CaskApps+=(tailscale)           # VPN
CaskApps+=(visual-studio-code)  # development environment
CaskApps+=(vivaldi)             # chrome-based web browser that supports UBlock Origin
CaskApps+=(windows-app)         # remote desktop
CaskApps+=(zed)                 # text editor
CaskApps+=(zoom)                # chat for work
brew install --quiet --cask "${CaskApps[@]}"

# Rust can be installed via brew, but Wasm targets do not work, so use rustup
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

CargoApps=()
CargoApps+=(cargo-update)       # update cargo packages
CargoApps+=(teehee)             # hex editor
CargoApps+=(watchexec-cli)      # command runner
cargo install "${CargoApps[@]}"
cargo install-update --all || true

##############
# Sublime text
##############
if [[ $OSTYPE == 'darwin'* ]]; then
    # Link my Sublime text configuration across Windows/OSX
    ln -sf "$HOME/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings"     "$HOME/Library/Application Support/Sublime Text/Packages/User/Preferences.sublime-settings"
    ln -sf "$HOME/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings" "$HOME/Library/Application Support/Sublime Text/Packages/User/Package Control.sublime-settings"
fi

##############
# Git repos
##############
function git_clone_repo() {
    REPO="$1"
    BRANCH="$2"
    DIR="$3"
    if [[ ! -d "$DIR" ]]; then
        echo >&2 "git clone $(basename "$REPO")"
        git clone --branch "$BRANCH" "$REPO" "$DIR"
    else
        echo >&2 "git update $(basename "$REPO")"
        pushd "$DIR" >/dev/null
        git pull --ff-only
        popd >/dev/null
    fi
}

git_clone_repo "https://github.com/webcoyote/VimMode.spoon" "master" "$HOME/.hammerspoon/Spoons/VimMode.spoon"

##############
# Disk
# Avoid SSD wear by configuring noatime at startup
# https://dpron.com/os-x-noatime-multiple-ssds/
##############
if ! mount | rg "/System/Volumes/VM" | rg noatime &>/dev/null ; then
    if sudo --prompt "Enter password to configure 'noatime' for disk" true ; then
        FILE="com.noatime.plist"
        DSTFILE="/Library/LaunchDaemons/$FILE"
        sudo cp -f "$SCRIPT_DIR/$FILE" "$DSTFILE"
        sudo chown root:wheel "$DSTFILE"
        sudo chmod 644 "$DSTFILE"
    else
        echo "Skipping noatime configuration"
    fi
fi

##############
# Limits: override maximum file/process limits
# https://wilsonmar.github.io/maximum-limits/
##############
DAEMONS="/Library/LaunchDaemons/"
for FILENAME in "$HOME/.dotfiles/config/osx/LaunchDaemons/"* ; do
    BASENAME="$(basename "$FILENAME")"
    if [[ ! -f "$DAEMONS/$BASENAME" ]]; then
        sudo cp "$FILENAME" "$DAEMONS/$BASENAME"
        sudo chown "root:wheel" "$DAEMONS/$BASENAME"
        sudo launchctl unload "$DAEMONS/$BASENAME" &>/dev/null || true
        sudo launchctl load -w "$DAEMONS/$BASENAME"
    fi
done
