#!/usr/bin/env bash
set -euo pipefail
readonly SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

EMACS_MAJOR=26
EMACS_MINOR=1
EMACS_VERSION="${EMACS_MAJOR}.${EMACS_MINOR}"
EMACS_LINUX_URL="http://mirror.keystealth.org/gnu/emacs/emacs-${EMACS_VERSION}.tar.gz"
EMACS_WINDOWS_URL="http://mirror.clarkson.edu/gnu/emacs/windows/emacs-${EMACS_MAJOR}/emacs-${EMACS_VERSION}-x86_64.zip"
EMACS_DIR_WINDOWS="/c/bin/emacs"
FONTS_URL="https://github.com/adobe-fonts/source-code-pro/archive/2.010R-ro/1.030R-it.zip"

function install_emacs_windows() {
    if [[ -f "$EMACS_DIR/bin/runemacs.exe" ]]; then
        echo "emacs already installed"
    else
        TEMP_DIR="$EMACS_DIR/temp"
        ZIP_NAME="$(basename "$EMACS_WINDOWS_URL")"
        mkdir -p "$TEMP_DIR"
        pushd "$TEMP_DIR"
        if [[ ! -f "$ZIP_NAME" ]]; then
            echo "downloading emacs"
            curl "$EMACS_WINDOWS_URL" --output "$ZIP_NAME"
        fi
        echo "unzipping emacs"
        unzip -q "$ZIP_NAME" -d ..
        popd
    fi
}

function install_emacs_ubuntu() {
    # sudo apt-get install -y build-essential
    # "$SCRIPT_DIR/_install-via-source" emacs "$EMACS_LINUX_URL"
    "$SCRIPT_DIR/_install-via-ppa" --package-name emacs26 emacs "ppa:kelleyk/emacs"
}

function install_emacs_linux() {
    if command -v apt &> /dev/null ; then
        install_emacs_ubuntu
    else
        echo "Unsupported Linux distribution: $(uname -v | awk '{print $1}')"
    fi
}

function install_spacemacs() {
    if [[ -d "$HOME/.emacs.d" ]]; then
        echo "spacemacs already installed"
    else
        git clone                                   \
            --branch develop                        \
            --depth 1                               \
            "https://github.com/syl20bnr/spacemacs" \
            "$HOME/.emacs.d"                        \
        #
    fi
}

install_fonts_unix() {
    FONT_HOME="$HOME/.local/share/fonts"
    FONT_DIR="$FONT_HOME/adobe-fonts/source-code-pro"
    if [[ -d "$FONT_DIR" ]]; then
        echo "font already installed"
    else
        echo "installing fonts to '$FONT_HOME'"
        mkdir -p "$FONT_HOME/adobe-fonts/source-code-pro"
        git clone                                                   \
            --branch release                                        \
            --depth 1                                               \
            "https://github.com/adobe-fonts/source-code-pro.git"    \
            "$FONT_HOME/adobe-fonts/source-code-pro"                \
        #
    fi
    fc-cache -f -v "$FONT_HOME/adobe-fonts/source-code-pro"
}

function install_fonts_windows() {
    if [[ -f "fonts/SourceCodePro-Black.ttf" ]]; then
        echo "fonts already installed"
    else
        TEMP_DIR="$EMACS_DIR/temp"
        ZIP_NAME="$(basename "$FONTS_URL")"
        mkdir -p "$TEMP_DIR"
        pushd "$TEMP_DIR"
        if [[ ! -f "$ZIP_NAME" ]]; then
            echo "downloading fonts"
            curl -L "$FONTS_URL" --output "$ZIP_NAME"
        fi
        mkdir -p "fonts"
        echo "unzipping fonts"
        unzip -qf "$ZIP_NAME" -d "fonts"
        echo "Install these fonts using right-click..."
        cd "fonts/source-code-pro-2.010R-ro-1.030R-it/TTF/"
        start .
        read -rp "Press enter to continue"
        popd
    fi
}

case "$OSTYPE" in
    linux*)
        install_emacs_linux
        install_fonts_unix
    ;;
    msys*|cygwin*)
        install_emacs_windows
        install_fonts_windows 
    ;;
    *)
        echo "Unsupported OS: $OSTYPE"
        exit 1
    ;;
esac

install_spacemacs
