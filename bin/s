#!/usr/bin/env bash
set -Eeuo pipefail
trap 'echo "${BASH_SOURCE[0]}: line $LINENO: $BASH_COMMAND: exitcode $?"' ERR

ARGS=()

PROJECT="$PWD/$(basename "$PWD").sublime-project"
if [[ -f "$PROJECT" ]]; then
    # If there is a project open the project
    ARGS+=("--project" "$PROJECT")
elif GIT_ROOT="$(git rev-parse --show-toplevel 2>/dev/null)" ; then
    # If we're in a repository that isn't the home directory then open the directory.
    # Opening $HOME causes sublime to show a popup dialog.
    if [[ "$GIT_ROOT" != "$HOME" ]]; then
        ARGS+=("$GIT_ROOT")
    fi
fi

# Detect if running inside WSL1 ("Microsoft") or WSL2 ("microsoft")
if [[ $(uname -r) =~ icrosoft ]]; then
    MY_OSTYPE=wsl
else
    MY_OSTYPE="$OSTYPE"
fi

case "$MY_OSTYPE" in
    darwin*|linux*)
        exec subl "${ARGS[@]}" "$@"
    ;;

    msys*)
        "/c/Program Files/Sublime Text 3/subl.exe" "${ARGS[@]}" "$@" </dev/null >/dev/null 2>&1 &
    ;;

    cygwin*)
        "/mnt/c/Program Files/Sublime Text 3/subl.exe" "${ARGS[@]}" "$@" </dev/null >/dev/null 2>&1 &
    ;;

    wsl*)
        # WSL seems to be unable to load files properly when they have absolute paths.
        # $ "s /home/pat/foo" => fails
        # $ "s ../foo" => ok
        #
        # What we want to do:
        # exec "/mnt/c/Program Files/Sublime Text 3/subl.exe" "$@" </dev/null >/dev/null 2>&1 &
        #
        # Hack to make it work:
        "/mnt/c/Program Files/Sublime Text 3/subl.exe" </dev/null >/dev/null 2>&1 &
        for file in "$@";  do
            if [[ ! -d "$file" ]] || [[ $# == 1 ]]; then
                # Resolve symlinks
                file="$(realpath -P "$file")"

                pushd "$(dirname "$file")" &>/dev/null || exit
                "/mnt/c/Program Files/Sublime Text 3/subl.exe" "${ARGS[@]}" "$(basename "$file")" </dev/null >/dev/null 2>&1 &
                popd &>/dev/null || exit
            fi
        done
    ;;

    *)
        echo "Unknown OS: $MY_OSTYPE"
        exit 1
    ;;
esac
